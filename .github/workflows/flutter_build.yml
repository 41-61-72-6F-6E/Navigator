name: Flutter Build

on:
  push:
    branches: [ main ]  # Trigger on pushes to main branch
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    
    # Set environment variables for the job
    env:
      API_URL: ${{ secrets.API_URL }}
    
    steps:
    # Checkout the repository code
    - name: Checkout repository
      uses: actions/checkout@v4
    
    # Setup Java (required for Android builds)
    - name: Setup Java
      uses: actions/setup-java@v3
      with:
        distribution: 'zulu'
        java-version: '17'
    
    # Setup Flutter
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        channel: 'stable'  # Use latest stable version (includes Dart 3.8.1+)
        cache: true  # Enable caching for faster builds
    
    # Get Flutter dependencies
    - name: Get dependencies
      run: |
        cd navigator
        flutter pub get
    
    - name: Generate code
      run: |
        cd navigator
        dart run build_runner build --delete-conflicting-outputs
      env:
        API_URL: ${{ secrets.API_URL }}
    
    # Generate code (for env.g.dart and other generated files)
    - name: Generate code
      run: |
        cd navigator
        dart run build_runner build --delete-conflicting-outputs
      env:
        API_URL: ${{ secrets.API_URL }}
    
    # Run tests (only if test directory exists)
    - name: Check if tests exist
      id: check_tests
      run: |
        cd navigator
        if [ -d "test" ]; then
          echo "tests_exist=true" >> $GITHUB_OUTPUT
        else
          echo "tests_exist=false" >> $GITHUB_OUTPUT
        fi
    
    - name: Run tests
      if: steps.check_tests.outputs.tests_exist == 'true'
      run: |
        cd navigator
        flutter test
    
    # Analyze code
    - name: Analyze code (nur echte Fehler blockieren)
      run: |
        cd navigator
        flutter analyze -v > analysis.log || true
        cat analysis.log
        if grep -q "error •" analysis.log; then
          echo "❌ Echte Fehler gefunden – Build wird abgebrochen"
          exit 1
        else
          echo "✅ Keine echten Fehler – Lints ignoriert"
        fi


    
    # Build APK for Android
    - name: Build APK
      run: |
        cd navigator
        flutter build apk --release
    
    # Build App Bundle for Android (recommended for Play Store)
    - name: Build App Bundle
      run: |
        cd navigator
        flutter build appbundle --release
    
    # Upload build artifacts
    - name: Upload APK
      uses: actions/upload-artifact@v4
      with:
        name: release-apk
        path: navigator/build/app/outputs/flutter-apk/app-release.apk
    
    - name: Upload App Bundle
      uses: actions/upload-artifact@v4
      with:
        name: release-bundle
        path: navigator/build/app/outputs/bundle/release/app-release.aab

  build-ios:
    runs-on: macos-latest

    env:
      API_URL: ${{ secrets.API_URL }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          cache: true

      - name: Get dependencies
        run: |
          cd navigator
          flutter pub get

      - name: Run code generation (build_runner)
        run: |
          cd navigator
          flutter pub run build_runner build --delete-conflicting-outputs

      - name: Build IPA (no code signing)
        run: |
          cd navigator
          flutter build ipa --no-codesign

      - name: Upload IPA
        uses: actions/upload-artifact@v4
        with:
          name: release-ipa
          path: navigator/build/ios/ipa/*.ipa


    
    # Note: For signed iOS builds, you'll need to configure code signing
    # which requires additional setup with certificates and provisioning profiles
